# List to keep track of all installed packages in a new anaconda environment
# Adrian 2020-03-26

conda create --name spiky python=3.6

conda activate spiky

# TODO: define versions of packages here as well
pip install numpy matplotlib scipy seaborn ruamel.yaml

pip install tensorflow==2.1.0
# tensorflow-2.1.0-cp36-cp36m-manylinux2010_x86_64.whl

pip install keras==2.3.1
# Keras-2.3.1-py2.py3-none-any.whl

# for jupyter notebook to make it visible in newer versions:
pip install ipython ipykernel
python -m ipykernel install --user --name spiky

# it is necessary to switch the kernel in the jupyter notebook at Kernel -> Change Kernel


### Note on matching tensorflow and keras versions:
# tensorflow 2.1.0  with keras 2.3.1
# tensorflow 1.8    with keras 2.1.6






###
###  Optional: GPU support with docker container (ubuntu 18.04)
###

# Docker container for GPU support (Docker version 19.03.8, build afacb8b7f0)
# Instructions from here: https://docs.docker.com/install/linux/docker-ce/ubuntu/

sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get update

sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io
sudo docker run hello-world

# Install docker for NVIDIA support
# Instructions from here: https://github.com/NVIDIA/nvidia-docker

distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list

sudo apt-get update && sudo apt-get install -y nvidia-container-toolkit
sudo systemctl restart docker


docker pull tensorflow/tensorflow:2.1.0-gpu-py3-jupyter

# start docker container with user permissions in detached mode:
docker run -it -d -p 8881:8888 -v /home/adrian/coding/:/tf/mapped -u $(id -u):$(id -g) --name spiky_tf --gpus all tensorflow/tensorflow:2.1.0-gpu-py3-jupyter

# change permissions on folders to allow pip installations of user (1000 is id)
docker exec -it -user root spiky_tf bash
mkdir .cache
chgrp 1000 .cache
chown 1000 .cache

cd /usr/local/lib
chgrp 1000 -R python3.6/
chown 1000 -R python3.6/

exit

# go back to container as normal user and install missing packages
docker exec -it spiky_tf bash
pip install keras seaborn pandas
exit

# show currently running notebook server (change port from 8888 to 8881)
docker exec spiky_tf jupyter notebook list 
